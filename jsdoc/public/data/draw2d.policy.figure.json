{
  "name": "figure",
  "namespace": "draw2d.policy",
  "description": "<p>Selection decorations for figures. Movement contrains. Width limitation,...</p>",
  "access": "",
  "virtual": false,
  "classes": [
    {
      "name": "AntSelectionFeedbackPolicy",
      "namespace": "draw2d.policy.figure",
      "description": "<p>Provide support for selecting and positioning a non-resizable figure.\nSelection is indicated via rectangular handle that outlines the figure with a 1-pixel black\ndotted line.</p>",
      "extends": [
        "draw2d.policy.figure.SelectionFeedbackPolicy"
      ],
      "access": "",
      "virtual": false,
      "functions": [
        {
          "name": "init",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Creates a new Router object</p>",
          "parameters": [],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "onSelect",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the framework of the Policy should show a resize handle for the given shape</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>the responsible canvas</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>the figure to decorate with a selection feedback</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "isPrimarySelection",
              "type": "Boolean",
              "description": "",
              "default": "",
              "optional": true,
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "moved",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Callback if the figure has been moved</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "_updateBeeLine",
          "access": "private",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "line",
              "type": "draw2d.shape.basic.Line",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "onUnselect",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>the unselected figure</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onInstall",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the host if the policy has been installed.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onUninstall",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the host if the policy has been uninstalled.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onDragStart",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the framework if the related shape has init a drag&amp;drop\noperation</p>\n<p>The Policy can send a veto to prevent the DragDrop operation</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>The host canvas</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>The related figure</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse up event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse up event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": [],
          "returns": {
            "type": "Boolean",
            "description": "<p>return <b>false</b> to send a veto to the drag operation</p>"
          }
        },
        {
          "name": "onDrag",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the framework during drag a figure.</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>The host canvas</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>The related figure</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onDragEnd",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the framework if the drag drop operation ends.</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>The host canvas</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>The related figure</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse up event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse up event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "adjustPosition",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Adjust the coordinates to the rectangle/region of this constraint.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": [
                "Number",
                "draw2d.geo.Point"
              ],
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "",
              "default": "",
              "optional": true,
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": [],
          "returns": {
            "type": "draw2d.geo.Point",
            "description": "<p>the constraint position of the figure</p>"
          }
        },
        {
          "name": "adjustDimension",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>ensure that the dimension didn't goes outside the given restrictions</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "w",
              "type": "Number",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "h",
              "type": "number",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": [],
          "returns": {
            "type": "draw2d.geo.Rectangle",
            "description": "<p>the constraint position of the figure</p>"
          }
        },
        {
          "name": "onRightMouseDown",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the user press the right mouse on the figure.<br>\nYou can either override the &quot;onContextMenu&quot; method of the figure or install an editor policy and override this method.\nBooth is valid and possible.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": [
                "draw2d.Figure",
                "draw2d.shape.basic.Line"
              ],
              "description": "<p>the figure below the mouse</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "4.4.0",
          "examples": []
        },
        {
          "name": "attr",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Read or set object attributes.<br>\nWhen no value is given, reads specified attribute from the element.<br>\nWhen value is given, sets the attribute to that value.\nMultiple attributes can be set by passing an object with name-value pairs.</p>",
          "parameters": [
            {
              "name": "name",
              "type": "String/Object",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "value",
              "type": "Object",
              "description": "",
              "default": "",
              "optional": true,
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "5.3.2",
          "examples": [],
          "returns": {
            "type": "Object",
            "description": ""
          }
        }
      ],
      "fires": "",
      "constructor": {
        "name": "AntSelectionFeedbackPolicy",
        "description": "",
        "parameters": [],
        "examples": [
          "circle =new draw2d.shape.basic.Circle({diameter:50, x:90, y:50});\n     circle.installEditPolicy(new draw2d.policy.figure.AntSelectionFeedbackPolicy());\n     canvas.add(circle);\n\n     canvas.add(new draw2d.shape.basic.Label({text:\"Click on the circle to see the selection feedback\"}),20,10);"
        ]
      }
    },
    {
      "name": "BigRectangleSelectionFeedbackPolicy",
      "namespace": "draw2d.policy.figure",
      "description": "",
      "extends": [
        "draw2d.policy.figure.SelectionFeedbackPolicy"
      ],
      "access": "",
      "virtual": false,
      "functions": [
        {
          "name": "init",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Creates a new Router object</p>",
          "parameters": [],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "onUnselect",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>the unselected figure</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onInstall",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the host if the policy has been installed.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onUninstall",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the host if the policy has been uninstalled.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onDragStart",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the framework if the related shape has init a drag&amp;drop\noperation</p>\n<p>The Policy can send a veto to prevent the DragDrop operation</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>The host canvas</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>The related figure</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse up event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse up event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": [],
          "returns": {
            "type": "Boolean",
            "description": "<p>return <b>false</b> to send a veto to the drag operation</p>"
          }
        },
        {
          "name": "onDrag",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the framework during drag a figure.</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>The host canvas</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>The related figure</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onDragEnd",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the framework if the drag drop operation ends.</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>The host canvas</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>The related figure</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse up event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse up event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "adjustPosition",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Adjust the coordinates to the rectangle/region of this constraint.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": [
                "Number",
                "draw2d.geo.Point"
              ],
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "",
              "default": "",
              "optional": true,
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": [],
          "returns": {
            "type": "draw2d.geo.Point",
            "description": "<p>the constraint position of the figure</p>"
          }
        },
        {
          "name": "adjustDimension",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>ensure that the dimension didn't goes outside the given restrictions</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "w",
              "type": "Number",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "h",
              "type": "number",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": [],
          "returns": {
            "type": "draw2d.geo.Rectangle",
            "description": "<p>the constraint position of the figure</p>"
          }
        },
        {
          "name": "moved",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Callback if the figure has moved</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>The host canvas</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>The related figure</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onRightMouseDown",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the user press the right mouse on the figure.<br>\nYou can either override the &quot;onContextMenu&quot; method of the figure or install an editor policy and override this method.\nBooth is valid and possible.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": [
                "draw2d.Figure",
                "draw2d.shape.basic.Line"
              ],
              "description": "<p>the figure below the mouse</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "4.4.0",
          "examples": []
        },
        {
          "name": "attr",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Read or set object attributes.<br>\nWhen no value is given, reads specified attribute from the element.<br>\nWhen value is given, sets the attribute to that value.\nMultiple attributes can be set by passing an object with name-value pairs.</p>",
          "parameters": [
            {
              "name": "name",
              "type": "String/Object",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "value",
              "type": "Object",
              "description": "",
              "default": "",
              "optional": true,
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "5.3.2",
          "examples": [],
          "returns": {
            "type": "Object",
            "description": ""
          }
        }
      ],
      "fires": "",
      "constructor": {
        "name": "BigRectangleSelectionFeedbackPolicy",
        "description": "",
        "parameters": [],
        "examples": [
          "circle =new draw2d.shape.basic.Circle();\n     circle.installEditPolicy(new draw2d.policy.figure.BigRectangleSelectionFeedbackPolicy());\n     canvas.add(circle,90,50);\n\n     canvas.add(new draw2d.shape.basic.Label({text:\"Click on the circle to see the selection feedback\"}),20,10);"
        ]
      }
    },
    {
      "name": "BusSelectionFeedbackPolicy",
      "namespace": "draw2d.policy.figure",
      "description": "",
      "extends": [
        "draw2d.policy.figure.SelectionFeedbackPolicy"
      ],
      "access": "",
      "virtual": false,
      "functions": [
        {
          "name": "init",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Creates a new Router object</p>",
          "parameters": [],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "onSelect",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the framework of the Policy should show a resize handle for the given shape</p>",
          "parameters": [
            {
              "name": "isPrimarySelection",
              "type": "Boolean",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "moved",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Callback if the figure has been moved</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "init",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Creates a new Router object</p>",
          "parameters": [],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "onSelect",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the framework of the Policy should show a resize handle for the given shape</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>the host of the diagram</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>the figure to select</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "isPrimarySelection",
              "type": "Boolean",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "moved",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Callback if the figure has been moved</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>The host canvas</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>The related figure</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "onUnselect",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>the unselected figure</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onInstall",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the host if the policy has been installed.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onUninstall",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the host if the policy has been uninstalled.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onDragStart",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the framework if the related shape has init a drag&amp;drop\noperation</p>\n<p>The Policy can send a veto to prevent the DragDrop operation</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>The host canvas</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>The related figure</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse up event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse up event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": [],
          "returns": {
            "type": "Boolean",
            "description": "<p>return <b>false</b> to send a veto to the drag operation</p>"
          }
        },
        {
          "name": "onDrag",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the framework during drag a figure.</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>The host canvas</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>The related figure</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onDragEnd",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the framework if the drag drop operation ends.</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>The host canvas</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>The related figure</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse up event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse up event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "adjustPosition",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Adjust the coordinates to the rectangle/region of this constraint.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": [
                "Number",
                "draw2d.geo.Point"
              ],
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "",
              "default": "",
              "optional": true,
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": [],
          "returns": {
            "type": "draw2d.geo.Point",
            "description": "<p>the constraint position of the figure</p>"
          }
        },
        {
          "name": "adjustDimension",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>ensure that the dimension didn't goes outside the given restrictions</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "w",
              "type": "Number",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "h",
              "type": "number",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": [],
          "returns": {
            "type": "draw2d.geo.Rectangle",
            "description": "<p>the constraint position of the figure</p>"
          }
        },
        {
          "name": "onRightMouseDown",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the user press the right mouse on the figure.<br>\nYou can either override the &quot;onContextMenu&quot; method of the figure or install an editor policy and override this method.\nBooth is valid and possible.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": [
                "draw2d.Figure",
                "draw2d.shape.basic.Line"
              ],
              "description": "<p>the figure below the mouse</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "4.4.0",
          "examples": []
        },
        {
          "name": "attr",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Read or set object attributes.<br>\nWhen no value is given, reads specified attribute from the element.<br>\nWhen value is given, sets the attribute to that value.\nMultiple attributes can be set by passing an object with name-value pairs.</p>",
          "parameters": [
            {
              "name": "name",
              "type": "String/Object",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "value",
              "type": "Object",
              "description": "",
              "default": "",
              "optional": true,
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "5.3.2",
          "examples": [],
          "returns": {
            "type": "Object",
            "description": ""
          }
        }
      ],
      "fires": "",
      "constructor": {
        "name": "BusSelectionFeedbackPolicy",
        "description": "",
        "parameters": [],
        "examples": []
      }
    },
    {
      "name": "DragDropEditPolicy",
      "namespace": "draw2d.policy.figure",
      "description": "<p>Called by the framework if the user edit the position of a figure with a drag drop operation.\nSub class like SelectionEditPolicy or RegionEditPolicy can adjust the position of the figure or the selections handles.</p>",
      "extends": [
        "draw2d.policy.figure.FigureEditPolicy"
      ],
      "access": "",
      "virtual": false,
      "functions": [
        {
          "name": "init",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "onInstall",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the host if the policy has been installed.</p>",
          "parameters": [
            {
              "name": "host",
              "type": [
                "draw2d.Canvas",
                "draw2d.Figure"
              ],
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "onUninstall",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the host if the policy has been uninstalled.</p>",
          "parameters": [
            {
              "name": "host",
              "type": [
                "draw2d.Canvas",
                "draw2d.Figure"
              ],
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "onDragStart",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the framework if the related shape has init a drag&amp;drop\noperation</p>\n<p>The Policy can send a veto to prevent the DragDrop operation</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>The host canvas</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>The related figure</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse up event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse up event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": [],
          "returns": {
            "type": "Boolean",
            "description": "<p>return <b>false</b> to send a veto to the drag operation</p>"
          }
        },
        {
          "name": "onDrag",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the framework during drag a figure.</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>The host canvas</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>The related figure</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "onDragEnd",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the framework if the drag drop operation ends.</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>The host canvas</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>The related figure</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse up event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse up event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "adjustPosition",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Adjust the coordinates to the rectangle/region of this constraint.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": [
                "Number",
                "draw2d.geo.Point"
              ],
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "",
              "default": "",
              "optional": true,
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": [],
          "returns": {
            "type": "draw2d.geo.Point",
            "description": "<p>the constraint position of the figure</p>"
          }
        },
        {
          "name": "adjustDimension",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>ensure that the dimension didn't goes outside the given restrictions</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "w",
              "type": "Number",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "h",
              "type": "number",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": [],
          "returns": {
            "type": "draw2d.geo.Rectangle",
            "description": "<p>the constraint position of the figure</p>"
          }
        },
        {
          "name": "moved",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Callback if the figure has moved</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>The host canvas</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>The related figure</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "onRightMouseDown",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the user press the right mouse on the figure.<br>\nYou can either override the &quot;onContextMenu&quot; method of the figure or install an editor policy and override this method.\nBooth is valid and possible.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": [
                "draw2d.Figure",
                "draw2d.shape.basic.Line"
              ],
              "description": "<p>the figure below the mouse</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "4.4.0",
          "examples": []
        },
        {
          "name": "attr",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Read or set object attributes.<br>\nWhen no value is given, reads specified attribute from the element.<br>\nWhen value is given, sets the attribute to that value.\nMultiple attributes can be set by passing an object with name-value pairs.</p>",
          "parameters": [
            {
              "name": "name",
              "type": "String/Object",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "value",
              "type": "Object",
              "description": "",
              "default": "",
              "optional": true,
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "5.3.2",
          "examples": [],
          "returns": {
            "type": "Object",
            "description": ""
          }
        }
      ],
      "fires": "",
      "constructor": {
        "name": "DragDropEditPolicy",
        "description": "",
        "parameters": [],
        "examples": []
      }
    },
    {
      "name": "FigureEditPolicy",
      "namespace": "draw2d.policy.figure",
      "description": "<p>Called by the framework if the user edit the position of a figure with a drag drop operation.\nSub class like SelectionEditPolicy or RegionEditPolicy can adjust the position of the figure\nor the selections handles.</p>",
      "extends": [
        "draw2d.policy.EditPolicy"
      ],
      "access": "",
      "virtual": false,
      "functions": [
        {
          "name": "init",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Creates a new Router object</p>",
          "parameters": [],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "onRightMouseDown",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the user press the right mouse on the figure.<br>\nYou can either override the &quot;onContextMenu&quot; method of the figure or install an editor policy and override this method.\nBooth is valid and possible.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": [
                "draw2d.Figure",
                "draw2d.shape.basic.Line"
              ],
              "description": "<p>the figure below the mouse</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "4.4.0",
          "examples": []
        },
        {
          "name": "attr",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Read or set object attributes.<br>\nWhen no value is given, reads specified attribute from the element.<br>\nWhen value is given, sets the attribute to that value.\nMultiple attributes can be set by passing an object with name-value pairs.</p>",
          "parameters": [
            {
              "name": "name",
              "type": "String/Object",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "value",
              "type": "Object",
              "description": "",
              "default": "",
              "optional": true,
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "5.3.2",
          "examples": [],
          "returns": {
            "type": "Object",
            "description": ""
          }
        },
        {
          "name": "onInstall",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the host if the policy has been installed.</p>",
          "parameters": [
            {
              "name": "host",
              "type": [
                "draw2d.Canvas",
                "draw2d.Figure"
              ],
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onUninstall",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the host if the policy has been uninstalled.</p>",
          "parameters": [
            {
              "name": "host",
              "type": [
                "draw2d.Canvas",
                "draw2d.Figure"
              ],
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        }
      ],
      "fires": "",
      "constructor": {
        "name": "FigureEditPolicy",
        "description": "",
        "parameters": [],
        "examples": []
      }
    },
    {
      "name": "GlowSelectionFeedbackPolicy",
      "namespace": "draw2d.policy.figure",
      "description": "",
      "extends": [
        "draw2d.policy.figure.SelectionFeedbackPolicy"
      ],
      "access": "",
      "virtual": false,
      "functions": [
        {
          "name": "init",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Creates a new Router object</p>",
          "parameters": [],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "onSelect",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the framework of the Policy should show a resize handle for the given shape</p>",
          "parameters": [
            {
              "name": "isPrimarySelection",
              "type": "Boolean",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "onUnselect",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>the unselected figure</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "onInstall",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the host if the policy has been installed.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onUninstall",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the host if the policy has been uninstalled.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onDragStart",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the framework if the related shape has init a drag&amp;drop\noperation</p>\n<p>The Policy can send a veto to prevent the DragDrop operation</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>The host canvas</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>The related figure</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse up event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse up event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": [],
          "returns": {
            "type": "Boolean",
            "description": "<p>return <b>false</b> to send a veto to the drag operation</p>"
          }
        },
        {
          "name": "onDrag",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the framework during drag a figure.</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>The host canvas</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>The related figure</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onDragEnd",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the framework if the drag drop operation ends.</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>The host canvas</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>The related figure</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse up event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse up event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "adjustPosition",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Adjust the coordinates to the rectangle/region of this constraint.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": [
                "Number",
                "draw2d.geo.Point"
              ],
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "",
              "default": "",
              "optional": true,
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": [],
          "returns": {
            "type": "draw2d.geo.Point",
            "description": "<p>the constraint position of the figure</p>"
          }
        },
        {
          "name": "adjustDimension",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>ensure that the dimension didn't goes outside the given restrictions</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "w",
              "type": "Number",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "h",
              "type": "number",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": [],
          "returns": {
            "type": "draw2d.geo.Rectangle",
            "description": "<p>the constraint position of the figure</p>"
          }
        },
        {
          "name": "moved",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Callback if the figure has moved</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>The host canvas</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>The related figure</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onRightMouseDown",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the user press the right mouse on the figure.<br>\nYou can either override the &quot;onContextMenu&quot; method of the figure or install an editor policy and override this method.\nBooth is valid and possible.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": [
                "draw2d.Figure",
                "draw2d.shape.basic.Line"
              ],
              "description": "<p>the figure below the mouse</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "4.4.0",
          "examples": []
        },
        {
          "name": "attr",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Read or set object attributes.<br>\nWhen no value is given, reads specified attribute from the element.<br>\nWhen value is given, sets the attribute to that value.\nMultiple attributes can be set by passing an object with name-value pairs.</p>",
          "parameters": [
            {
              "name": "name",
              "type": "String/Object",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "value",
              "type": "Object",
              "description": "",
              "default": "",
              "optional": true,
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "5.3.2",
          "examples": [],
          "returns": {
            "type": "Object",
            "description": ""
          }
        }
      ],
      "fires": "",
      "constructor": {
        "name": "GlowSelectionFeedbackPolicy",
        "description": "",
        "parameters": [],
        "examples": [
          "circle =new draw2d.shape.basic.Circle();\n     circle.installEditPolicy(new draw2d.policy.figure.GlowSelectionFeedbackPolicy());\n     canvas.add(circle,90,50);\n\n     canvas.add(new draw2d.shape.basic.Label(\"Click on the circle to see the selection feedback\"),20,10);"
        ]
      }
    },
    {
      "name": "HorizontalEditPolicy",
      "namespace": "draw2d.policy.figure",
      "description": "<p>An EditPolicy for use with Figures. With this edit policy you can move the shape only in a horizontal manner.</p>",
      "extends": [
        "draw2d.policy.figure.DragDropEditPolicy"
      ],
      "access": "",
      "virtual": false,
      "functions": [
        {
          "name": "init",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Creates a new constraint object</p>",
          "parameters": [],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "adjustPosition",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>It is only possible to drag&amp;drop the element in a horizontal line</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": [
                "Number",
                "draw2d.geo.Point"
              ],
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "number",
              "description": "",
              "default": "",
              "optional": true,
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": [],
          "returns": {
            "type": "draw2d.geo.Point",
            "description": "<p>the constraint position of the figure</p>"
          }
        },
        {
          "name": "onInstall",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the host if the policy has been installed.</p>",
          "parameters": [
            {
              "name": "host",
              "type": [
                "draw2d.Canvas",
                "draw2d.Figure"
              ],
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onUninstall",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the host if the policy has been uninstalled.</p>",
          "parameters": [
            {
              "name": "host",
              "type": [
                "draw2d.Canvas",
                "draw2d.Figure"
              ],
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onDragStart",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the framework if the related shape has init a drag&amp;drop\noperation</p>\n<p>The Policy can send a veto to prevent the DragDrop operation</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>The host canvas</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>The related figure</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse up event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse up event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": [],
          "returns": {
            "type": "Boolean",
            "description": "<p>return <b>false</b> to send a veto to the drag operation</p>"
          }
        },
        {
          "name": "onDrag",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the framework during drag a figure.</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>The host canvas</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>The related figure</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onDragEnd",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the framework if the drag drop operation ends.</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>The host canvas</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>The related figure</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse up event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse up event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "adjustDimension",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>ensure that the dimension didn't goes outside the given restrictions</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "w",
              "type": "Number",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "h",
              "type": "number",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": [],
          "returns": {
            "type": "draw2d.geo.Rectangle",
            "description": "<p>the constraint position of the figure</p>"
          }
        },
        {
          "name": "moved",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Callback if the figure has moved</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>The host canvas</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>The related figure</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onRightMouseDown",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the user press the right mouse on the figure.<br>\nYou can either override the &quot;onContextMenu&quot; method of the figure or install an editor policy and override this method.\nBooth is valid and possible.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": [
                "draw2d.Figure",
                "draw2d.shape.basic.Line"
              ],
              "description": "<p>the figure below the mouse</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "4.4.0",
          "examples": []
        },
        {
          "name": "attr",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Read or set object attributes.<br>\nWhen no value is given, reads specified attribute from the element.<br>\nWhen value is given, sets the attribute to that value.\nMultiple attributes can be set by passing an object with name-value pairs.</p>",
          "parameters": [
            {
              "name": "name",
              "type": "String/Object",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "value",
              "type": "Object",
              "description": "",
              "default": "",
              "optional": true,
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "5.3.2",
          "examples": [],
          "returns": {
            "type": "Object",
            "description": ""
          }
        }
      ],
      "fires": "",
      "constructor": {
        "name": "HorizontalEditPolicy",
        "description": "",
        "parameters": [],
        "examples": [
          "// add some demo figure to the canvas\n     var circle =new draw2d.shape.basic.Circle({diameter:50, x:10, y:30});\n     canvas.add(circle);\n\n     // add the edit policy to the shape. At this point you can move the shape only\n     // horizontal\n     circle.installEditPolicy(new draw2d.policy.figure.HorizontalEditPolicy());"
        ]
      }
    },
    {
      "name": "RaftSelectionFeedbackPolicy",
      "namespace": "draw2d.policy.figure",
      "description": "<p>A SelectionFeedbackPolicy with resize handles (rectangles) on each side and corner of the shape</p>",
      "extends": [
        "draw2d.policy.figure.SelectionFeedbackPolicy"
      ],
      "access": "",
      "virtual": false,
      "functions": [
        {
          "name": "init",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onUnselect",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>the unselected figure</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onInstall",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the host if the policy has been installed.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onUninstall",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the host if the policy has been uninstalled.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onDragStart",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the framework if the related shape has init a drag&amp;drop\noperation</p>\n<p>The Policy can send a veto to prevent the DragDrop operation</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>The host canvas</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>The related figure</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse up event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse up event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": [],
          "returns": {
            "type": "Boolean",
            "description": "<p>return <b>false</b> to send a veto to the drag operation</p>"
          }
        },
        {
          "name": "onDrag",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the framework during drag a figure.</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>The host canvas</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>The related figure</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onDragEnd",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the framework if the drag drop operation ends.</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>The host canvas</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>The related figure</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse up event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse up event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "adjustPosition",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Adjust the coordinates to the rectangle/region of this constraint.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": [
                "Number",
                "draw2d.geo.Point"
              ],
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "",
              "default": "",
              "optional": true,
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": [],
          "returns": {
            "type": "draw2d.geo.Point",
            "description": "<p>the constraint position of the figure</p>"
          }
        },
        {
          "name": "adjustDimension",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>ensure that the dimension didn't goes outside the given restrictions</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "w",
              "type": "Number",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "h",
              "type": "number",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": [],
          "returns": {
            "type": "draw2d.geo.Rectangle",
            "description": "<p>the constraint position of the figure</p>"
          }
        },
        {
          "name": "moved",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Callback if the figure has moved</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>The host canvas</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>The related figure</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onRightMouseDown",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the user press the right mouse on the figure.<br>\nYou can either override the &quot;onContextMenu&quot; method of the figure or install an editor policy and override this method.\nBooth is valid and possible.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": [
                "draw2d.Figure",
                "draw2d.shape.basic.Line"
              ],
              "description": "<p>the figure below the mouse</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "4.4.0",
          "examples": []
        },
        {
          "name": "attr",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Read or set object attributes.<br>\nWhen no value is given, reads specified attribute from the element.<br>\nWhen value is given, sets the attribute to that value.\nMultiple attributes can be set by passing an object with name-value pairs.</p>",
          "parameters": [
            {
              "name": "name",
              "type": "String/Object",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "value",
              "type": "Object",
              "description": "",
              "default": "",
              "optional": true,
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "5.3.2",
          "examples": [],
          "returns": {
            "type": "Object",
            "description": ""
          }
        }
      ],
      "fires": "",
      "constructor": {
        "name": "RaftSelectionFeedbackPolicy",
        "description": "",
        "parameters": [],
        "examples": [
          "circle =new draw2d.shape.basic.Circle({diameter:50});\n     circle.installEditPolicy(new draw2d.policy.RectangleSelectionFeedbackPolicy());\n     canvas.add(circle,90,50);\n\n     canvas.add(new draw2d.shape.basic.Label({text:\"Click on the circle to see the selection feedback\"}),20,10);"
        ]
      }
    },
    {
      "name": "RectangleSelectionFeedbackPolicy",
      "namespace": "draw2d.policy.figure",
      "description": "<p>A SelectionFeedbackPolicy with resize handles (rectangles) on each side and corner of the shape</p>",
      "extends": [
        "draw2d.policy.figure.SelectionFeedbackPolicy"
      ],
      "access": "",
      "virtual": false,
      "functions": [
        {
          "name": "init",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Creates a selection feedback for a shape.</p>",
          "parameters": [],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "onSelect",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "moved",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Callback if the figure has been moved. In this case we must update the position of the\nresize handles and the &quot;ant&quot; box.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "onUnselect",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>the unselected figure</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onInstall",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the host if the policy has been installed.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onUninstall",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the host if the policy has been uninstalled.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onDragStart",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the framework if the related shape has init a drag&amp;drop\noperation</p>\n<p>The Policy can send a veto to prevent the DragDrop operation</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>The host canvas</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>The related figure</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse up event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse up event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": [],
          "returns": {
            "type": "Boolean",
            "description": "<p>return <b>false</b> to send a veto to the drag operation</p>"
          }
        },
        {
          "name": "onDrag",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the framework during drag a figure.</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>The host canvas</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>The related figure</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onDragEnd",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the framework if the drag drop operation ends.</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>The host canvas</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>The related figure</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse up event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse up event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "adjustPosition",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Adjust the coordinates to the rectangle/region of this constraint.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": [
                "Number",
                "draw2d.geo.Point"
              ],
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "",
              "default": "",
              "optional": true,
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": [],
          "returns": {
            "type": "draw2d.geo.Point",
            "description": "<p>the constraint position of the figure</p>"
          }
        },
        {
          "name": "adjustDimension",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>ensure that the dimension didn't goes outside the given restrictions</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "w",
              "type": "Number",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "h",
              "type": "number",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": [],
          "returns": {
            "type": "draw2d.geo.Rectangle",
            "description": "<p>the constraint position of the figure</p>"
          }
        },
        {
          "name": "onRightMouseDown",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the user press the right mouse on the figure.<br>\nYou can either override the &quot;onContextMenu&quot; method of the figure or install an editor policy and override this method.\nBooth is valid and possible.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": [
                "draw2d.Figure",
                "draw2d.shape.basic.Line"
              ],
              "description": "<p>the figure below the mouse</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "4.4.0",
          "examples": []
        },
        {
          "name": "attr",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Read or set object attributes.<br>\nWhen no value is given, reads specified attribute from the element.<br>\nWhen value is given, sets the attribute to that value.\nMultiple attributes can be set by passing an object with name-value pairs.</p>",
          "parameters": [
            {
              "name": "name",
              "type": "String/Object",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "value",
              "type": "Object",
              "description": "",
              "default": "",
              "optional": true,
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "5.3.2",
          "examples": [],
          "returns": {
            "type": "Object",
            "description": ""
          }
        }
      ],
      "fires": "",
      "constructor": {
        "name": "RectangleSelectionFeedbackPolicy",
        "description": "",
        "parameters": [],
        "examples": [
          "circle =new draw2d.shape.basic.Circle({diameter:50});\n     circle.installEditPolicy(new draw2d.policy.RectangleSelectionFeedbackPolicy());\n     canvas.add(circle,90,50);\n\n     canvas.add(new draw2d.shape.basic.Label({text:\"Click on the circle to see the selection feedback\"}),20,10);"
        ]
      }
    },
    {
      "name": "RegionEditPolicy",
      "namespace": "draw2d.policy.figure",
      "description": "<p>An EditPolicy for use with Figures. The constraint for RegionEditPolicy is a Rectangle. It is\nnot possible to move the related figure outside this constrained area.</p>",
      "extends": [
        "draw2d.policy.figure.DragDropEditPolicy"
      ],
      "access": "",
      "virtual": false,
      "functions": [
        {
          "name": "init",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Creates a new constraint object</p>",
          "parameters": [
            {
              "name": "x",
              "type": [
                "Number",
                "draw2d.geo.Rectangle"
              ],
              "description": "<p>x coordinate or a rectangle as constraint for the assigned figure.</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "w",
              "type": "Number",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "h",
              "type": "Number",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "setBoundingBox",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Update the constraint bounding box for the policy.</p>",
          "parameters": [
            {
              "name": "boundingBox",
              "type": "draw2d.geo.Rectangle",
              "description": "<p>the constraint rectangle</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "4.8.2",
          "examples": [],
          "returns": {
            "type": "this",
            "description": ""
          }
        },
        {
          "name": "getBoundingBox",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Returns the constraint bounding box for the policy.</p>",
          "parameters": [],
          "inherited": false,
          "since": "",
          "examples": [],
          "returns": {
            "type": "draw2d.geo.Rectangle",
            "description": ""
          }
        },
        {
          "name": "adjustPosition",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Adjust the coordinates to the rectangle/region of this constraint.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": [
                "Number",
                "draw2d.geo.Point"
              ],
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "",
              "default": "",
              "optional": true,
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": [],
          "returns": {
            "type": "draw2d.geo.Point",
            "description": "<p>the constraint position of the figure</p>"
          }
        },
        {
          "name": "adjustDimension",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Adjust the dimension of the rectangle to fit into the region of the policy</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "w",
              "type": "Number",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "h",
              "type": "Number",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": [],
          "returns": {
            "type": "draw2d.geo.Rectangle",
            "description": "<p>the constraint position of the figure</p>"
          }
        },
        {
          "name": "onInstall",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the host if the policy has been installed.</p>",
          "parameters": [
            {
              "name": "host",
              "type": [
                "draw2d.Canvas",
                "draw2d.Figure"
              ],
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onUninstall",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the host if the policy has been uninstalled.</p>",
          "parameters": [
            {
              "name": "host",
              "type": [
                "draw2d.Canvas",
                "draw2d.Figure"
              ],
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onDragStart",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the framework if the related shape has init a drag&amp;drop\noperation</p>\n<p>The Policy can send a veto to prevent the DragDrop operation</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>The host canvas</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>The related figure</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse up event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse up event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": [],
          "returns": {
            "type": "Boolean",
            "description": "<p>return <b>false</b> to send a veto to the drag operation</p>"
          }
        },
        {
          "name": "onDrag",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the framework during drag a figure.</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>The host canvas</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>The related figure</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onDragEnd",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the framework if the drag drop operation ends.</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>The host canvas</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>The related figure</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse up event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse up event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "moved",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Callback if the figure has moved</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>The host canvas</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>The related figure</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onRightMouseDown",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the user press the right mouse on the figure.<br>\nYou can either override the &quot;onContextMenu&quot; method of the figure or install an editor policy and override this method.\nBooth is valid and possible.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": [
                "draw2d.Figure",
                "draw2d.shape.basic.Line"
              ],
              "description": "<p>the figure below the mouse</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "4.4.0",
          "examples": []
        },
        {
          "name": "attr",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Read or set object attributes.<br>\nWhen no value is given, reads specified attribute from the element.<br>\nWhen value is given, sets the attribute to that value.\nMultiple attributes can be set by passing an object with name-value pairs.</p>",
          "parameters": [
            {
              "name": "name",
              "type": "String/Object",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "value",
              "type": "Object",
              "description": "",
              "default": "",
              "optional": true,
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "5.3.2",
          "examples": [],
          "returns": {
            "type": "Object",
            "description": ""
          }
        }
      ],
      "fires": "",
      "constructor": {
        "name": "RegionEditPolicy",
        "description": "",
        "parameters": [],
        "examples": []
      }
    },
    {
      "name": "ResizeSelectionFeedbackPolicy",
      "namespace": "draw2d.policy.figure",
      "description": "<p>Selection feedback policy without &quot;marching ant lines&quot; or any other rectangle highlight. Just\nsome resize handles at each corner of the shape.</p>",
      "extends": [
        "draw2d.policy.figure.SelectionFeedbackPolicy"
      ],
      "access": "",
      "virtual": false,
      "functions": [
        {
          "name": "init",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Creates a new Router object</p>",
          "parameters": [],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "onSelect",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the framework of the Policy should show a resize handle for the given shape</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>the related canvas</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>the selected figure</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "isPrimarySelection",
              "type": "Boolean",
              "description": "",
              "default": "",
              "optional": true,
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "moved",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Callback if the figure has been moved. In this case we must update the position of the\nresize handles.</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>the related canvas</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>the moved figure</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "onUnselect",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>the unselected figure</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onInstall",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the host if the policy has been installed.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onUninstall",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the host if the policy has been uninstalled.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onDragStart",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the framework if the related shape has init a drag&amp;drop\noperation</p>\n<p>The Policy can send a veto to prevent the DragDrop operation</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>The host canvas</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>The related figure</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse up event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse up event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": [],
          "returns": {
            "type": "Boolean",
            "description": "<p>return <b>false</b> to send a veto to the drag operation</p>"
          }
        },
        {
          "name": "onDrag",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the framework during drag a figure.</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>The host canvas</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>The related figure</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onDragEnd",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the framework if the drag drop operation ends.</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>The host canvas</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>The related figure</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse up event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse up event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "adjustPosition",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Adjust the coordinates to the rectangle/region of this constraint.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": [
                "Number",
                "draw2d.geo.Point"
              ],
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "",
              "default": "",
              "optional": true,
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": [],
          "returns": {
            "type": "draw2d.geo.Point",
            "description": "<p>the constraint position of the figure</p>"
          }
        },
        {
          "name": "adjustDimension",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>ensure that the dimension didn't goes outside the given restrictions</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "w",
              "type": "Number",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "h",
              "type": "number",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": [],
          "returns": {
            "type": "draw2d.geo.Rectangle",
            "description": "<p>the constraint position of the figure</p>"
          }
        },
        {
          "name": "onRightMouseDown",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the user press the right mouse on the figure.<br>\nYou can either override the &quot;onContextMenu&quot; method of the figure or install an editor policy and override this method.\nBooth is valid and possible.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": [
                "draw2d.Figure",
                "draw2d.shape.basic.Line"
              ],
              "description": "<p>the figure below the mouse</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "4.4.0",
          "examples": []
        },
        {
          "name": "attr",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Read or set object attributes.<br>\nWhen no value is given, reads specified attribute from the element.<br>\nWhen value is given, sets the attribute to that value.\nMultiple attributes can be set by passing an object with name-value pairs.</p>",
          "parameters": [
            {
              "name": "name",
              "type": "String/Object",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "value",
              "type": "Object",
              "description": "",
              "default": "",
              "optional": true,
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "5.3.2",
          "examples": [],
          "returns": {
            "type": "Object",
            "description": ""
          }
        }
      ],
      "fires": "",
      "constructor": {
        "name": "ResizeSelectionFeedbackPolicy",
        "description": "",
        "parameters": [],
        "examples": [
          "circle =new draw2d.shape.basic.Circle();\n     circle.installEditPolicy(new draw2d.policy.ResizeSelectionFeedbackPolicy());\n     canvas.add(circle,90,50);\n\n     canvas.add(new draw2d.shape.basic.Label({text:\"Click on the circle to see the selection feedback\"}),20,10);"
        ]
      }
    },
    {
      "name": "RoundRectangleSelectionFeedbackPolicy",
      "namespace": "draw2d.policy.figure",
      "description": "",
      "extends": [
        "draw2d.policy.figure.RectangleSelectionFeedbackPolicy"
      ],
      "access": "",
      "virtual": false,
      "functions": [
        {
          "name": "init",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Creates a new Router object</p>",
          "parameters": [],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "onSelect",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "moved",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Callback if the figure has been moved. In this case we must update the position of the\nresize handles and the &quot;ant&quot; box.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onUnselect",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>the unselected figure</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onInstall",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the host if the policy has been installed.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onUninstall",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the host if the policy has been uninstalled.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onDragStart",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the framework if the related shape has init a drag&amp;drop\noperation</p>\n<p>The Policy can send a veto to prevent the DragDrop operation</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>The host canvas</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>The related figure</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse up event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse up event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": [],
          "returns": {
            "type": "Boolean",
            "description": "<p>return <b>false</b> to send a veto to the drag operation</p>"
          }
        },
        {
          "name": "onDrag",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the framework during drag a figure.</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>The host canvas</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>The related figure</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onDragEnd",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the framework if the drag drop operation ends.</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>The host canvas</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>The related figure</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse up event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse up event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "adjustPosition",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Adjust the coordinates to the rectangle/region of this constraint.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": [
                "Number",
                "draw2d.geo.Point"
              ],
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "",
              "default": "",
              "optional": true,
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": [],
          "returns": {
            "type": "draw2d.geo.Point",
            "description": "<p>the constraint position of the figure</p>"
          }
        },
        {
          "name": "adjustDimension",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>ensure that the dimension didn't goes outside the given restrictions</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "w",
              "type": "Number",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "h",
              "type": "number",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": [],
          "returns": {
            "type": "draw2d.geo.Rectangle",
            "description": "<p>the constraint position of the figure</p>"
          }
        },
        {
          "name": "onRightMouseDown",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the user press the right mouse on the figure.<br>\nYou can either override the &quot;onContextMenu&quot; method of the figure or install an editor policy and override this method.\nBooth is valid and possible.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": [
                "draw2d.Figure",
                "draw2d.shape.basic.Line"
              ],
              "description": "<p>the figure below the mouse</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "4.4.0",
          "examples": []
        },
        {
          "name": "attr",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Read or set object attributes.<br>\nWhen no value is given, reads specified attribute from the element.<br>\nWhen value is given, sets the attribute to that value.\nMultiple attributes can be set by passing an object with name-value pairs.</p>",
          "parameters": [
            {
              "name": "name",
              "type": "String/Object",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "value",
              "type": "Object",
              "description": "",
              "default": "",
              "optional": true,
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "5.3.2",
          "examples": [],
          "returns": {
            "type": "Object",
            "description": ""
          }
        }
      ],
      "fires": "",
      "constructor": {
        "name": "RoundRectangleSelectionFeedbackPolicy",
        "description": "",
        "parameters": [],
        "examples": [
          "circle =new draw2d.shape.basic.Circle();\n     circle.installEditPolicy(new draw2d.policy.RoundRectangleSelectionFeedbackPolicy());\n     canvas.add(circle,90,50);\n\n     canvas.add(new draw2d.shape.basic.Label({text:\"Click on the circle to see the selection feedback\"}),20,10);"
        ]
      }
    },
    {
      "name": "SelectionFeedbackPolicy",
      "namespace": "draw2d.policy.figure",
      "description": "<p>A {@link  draw2d.policy.SelectionFeedbackPolicy} that is sensitive to the canvas selection. Subclasses will typically\ndecorate the {@link draw2d.Figure figure} with things like selection handles and/or focus feedback.\n<br>\nIf you want to change the handle visibility for a figure, then you should use SelectionFeedbackPolicy to do that.</p>",
      "extends": [
        "draw2d.policy.figure.DragDropEditPolicy"
      ],
      "access": "",
      "virtual": false,
      "functions": [
        {
          "name": "init",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "onUnselect",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>the unselected figure</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "onInstall",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the host if the policy has been installed.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "onUninstall",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the host if the policy has been uninstalled.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "onDragStart",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the framework if the related shape has init a drag&amp;drop\noperation</p>\n<p>The Policy can send a veto to prevent the DragDrop operation</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>The host canvas</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>The related figure</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse up event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse up event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": [],
          "returns": {
            "type": "Boolean",
            "description": "<p>return <b>false</b> to send a veto to the drag operation</p>"
          }
        },
        {
          "name": "onDrag",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the framework during drag a figure.</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>The host canvas</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>The related figure</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onDragEnd",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the framework if the drag drop operation ends.</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>The host canvas</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>The related figure</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse up event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse up event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "adjustPosition",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Adjust the coordinates to the rectangle/region of this constraint.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": [
                "Number",
                "draw2d.geo.Point"
              ],
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "",
              "default": "",
              "optional": true,
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": [],
          "returns": {
            "type": "draw2d.geo.Point",
            "description": "<p>the constraint position of the figure</p>"
          }
        },
        {
          "name": "adjustDimension",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>ensure that the dimension didn't goes outside the given restrictions</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "w",
              "type": "Number",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "h",
              "type": "number",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": [],
          "returns": {
            "type": "draw2d.geo.Rectangle",
            "description": "<p>the constraint position of the figure</p>"
          }
        },
        {
          "name": "moved",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Callback if the figure has moved</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>The host canvas</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>The related figure</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onRightMouseDown",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the user press the right mouse on the figure.<br>\nYou can either override the &quot;onContextMenu&quot; method of the figure or install an editor policy and override this method.\nBooth is valid and possible.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": [
                "draw2d.Figure",
                "draw2d.shape.basic.Line"
              ],
              "description": "<p>the figure below the mouse</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "4.4.0",
          "examples": []
        },
        {
          "name": "attr",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Read or set object attributes.<br>\nWhen no value is given, reads specified attribute from the element.<br>\nWhen value is given, sets the attribute to that value.\nMultiple attributes can be set by passing an object with name-value pairs.</p>",
          "parameters": [
            {
              "name": "name",
              "type": "String/Object",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "value",
              "type": "Object",
              "description": "",
              "default": "",
              "optional": true,
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "5.3.2",
          "examples": [],
          "returns": {
            "type": "Object",
            "description": ""
          }
        }
      ],
      "fires": "",
      "constructor": {
        "name": "SelectionFeedbackPolicy",
        "description": "",
        "parameters": [],
        "examples": []
      }
    },
    {
      "name": "SelectionPolicy",
      "namespace": "draw2d.policy.figure",
      "description": "<p>A {@link  draw2d.policy.SelectionFeedbackPolicy} that is sensitive to the canvas selection. Subclasses will typically\ndecorate the {@link draw2d.Figure figure} with things like selection handles and/or focus feedback.\n<br>\nIf you want to change the handle visibility for a figure, then you should use SelectionFeedbackPolicy to do that.</p>",
      "extends": [
        "draw2d.policy.figure.DragDropEditPolicy"
      ],
      "access": "",
      "virtual": false,
      "functions": [
        {
          "name": "init",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "onSelect",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "figure",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "isPrimarySelection",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "onUnselect",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>the unselected figure</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "onInstall",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the host if the policy has been installed.</p>",
          "parameters": [
            {
              "name": "host",
              "type": [
                "draw2d.Canvas",
                "draw2d.Figure"
              ],
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onUninstall",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the host if the policy has been uninstalled.</p>",
          "parameters": [
            {
              "name": "host",
              "type": [
                "draw2d.Canvas",
                "draw2d.Figure"
              ],
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onDragStart",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the framework if the related shape has init a drag&amp;drop\noperation</p>\n<p>The Policy can send a veto to prevent the DragDrop operation</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>The host canvas</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>The related figure</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse up event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse up event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": [],
          "returns": {
            "type": "Boolean",
            "description": "<p>return <b>false</b> to send a veto to the drag operation</p>"
          }
        },
        {
          "name": "onDrag",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the framework during drag a figure.</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>The host canvas</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>The related figure</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onDragEnd",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the framework if the drag drop operation ends.</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>The host canvas</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>The related figure</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse up event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse up event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "adjustPosition",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Adjust the coordinates to the rectangle/region of this constraint.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": [
                "Number",
                "draw2d.geo.Point"
              ],
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "",
              "default": "",
              "optional": true,
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": [],
          "returns": {
            "type": "draw2d.geo.Point",
            "description": "<p>the constraint position of the figure</p>"
          }
        },
        {
          "name": "adjustDimension",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>ensure that the dimension didn't goes outside the given restrictions</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "w",
              "type": "Number",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "h",
              "type": "number",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": [],
          "returns": {
            "type": "draw2d.geo.Rectangle",
            "description": "<p>the constraint position of the figure</p>"
          }
        },
        {
          "name": "moved",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Callback if the figure has moved</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>The host canvas</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>The related figure</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onRightMouseDown",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the user press the right mouse on the figure.<br>\nYou can either override the &quot;onContextMenu&quot; method of the figure or install an editor policy and override this method.\nBooth is valid and possible.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": [
                "draw2d.Figure",
                "draw2d.shape.basic.Line"
              ],
              "description": "<p>the figure below the mouse</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "4.4.0",
          "examples": []
        },
        {
          "name": "attr",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Read or set object attributes.<br>\nWhen no value is given, reads specified attribute from the element.<br>\nWhen value is given, sets the attribute to that value.\nMultiple attributes can be set by passing an object with name-value pairs.</p>",
          "parameters": [
            {
              "name": "name",
              "type": "String/Object",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "value",
              "type": "Object",
              "description": "",
              "default": "",
              "optional": true,
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "5.3.2",
          "examples": [],
          "returns": {
            "type": "Object",
            "description": ""
          }
        }
      ],
      "fires": "",
      "constructor": {
        "name": "SelectionPolicy",
        "description": "",
        "parameters": [],
        "examples": []
      }
    },
    {
      "name": "SlimSelectionFeedbackPolicy",
      "namespace": "draw2d.policy.figure",
      "description": "<p>Add only very small resize handles to the figure.</p>",
      "extends": [
        "draw2d.policy.figure.RectangleSelectionFeedbackPolicy"
      ],
      "access": "",
      "virtual": false,
      "functions": [
        {
          "name": "init",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Creates a new Router object</p>",
          "parameters": [],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "onSelect",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "moved",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Callback if the figure has been moved. In this case we must update the position of the\nresize handles and the &quot;ant&quot; box.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onUnselect",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>the unselected figure</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onInstall",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the host if the policy has been installed.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onUninstall",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the host if the policy has been uninstalled.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onDragStart",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the framework if the related shape has init a drag&amp;drop\noperation</p>\n<p>The Policy can send a veto to prevent the DragDrop operation</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>The host canvas</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>The related figure</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse up event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse up event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": [],
          "returns": {
            "type": "Boolean",
            "description": "<p>return <b>false</b> to send a veto to the drag operation</p>"
          }
        },
        {
          "name": "onDrag",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the framework during drag a figure.</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>The host canvas</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>The related figure</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onDragEnd",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the framework if the drag drop operation ends.</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>The host canvas</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>The related figure</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse up event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse up event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "adjustPosition",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Adjust the coordinates to the rectangle/region of this constraint.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": [
                "Number",
                "draw2d.geo.Point"
              ],
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "",
              "default": "",
              "optional": true,
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": [],
          "returns": {
            "type": "draw2d.geo.Point",
            "description": "<p>the constraint position of the figure</p>"
          }
        },
        {
          "name": "adjustDimension",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>ensure that the dimension didn't goes outside the given restrictions</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "w",
              "type": "Number",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "h",
              "type": "number",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": [],
          "returns": {
            "type": "draw2d.geo.Rectangle",
            "description": "<p>the constraint position of the figure</p>"
          }
        },
        {
          "name": "onRightMouseDown",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the user press the right mouse on the figure.<br>\nYou can either override the &quot;onContextMenu&quot; method of the figure or install an editor policy and override this method.\nBooth is valid and possible.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": [
                "draw2d.Figure",
                "draw2d.shape.basic.Line"
              ],
              "description": "<p>the figure below the mouse</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "4.4.0",
          "examples": []
        },
        {
          "name": "attr",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Read or set object attributes.<br>\nWhen no value is given, reads specified attribute from the element.<br>\nWhen value is given, sets the attribute to that value.\nMultiple attributes can be set by passing an object with name-value pairs.</p>",
          "parameters": [
            {
              "name": "name",
              "type": "String/Object",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "value",
              "type": "Object",
              "description": "",
              "default": "",
              "optional": true,
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "5.3.2",
          "examples": [],
          "returns": {
            "type": "Object",
            "description": ""
          }
        }
      ],
      "fires": "",
      "constructor": {
        "name": "SlimSelectionFeedbackPolicy",
        "description": "",
        "parameters": [],
        "examples": [
          "circle =new draw2d.shape.basic.Circle();\n     circle.installEditPolicy(new draw2d.policy.SlimSelectionFeedbackPolicy());\n     canvas.add(circle,90,50);\n\n     canvas.add(new draw2d.shape.basic.Label({text:\"Click on the circle to see the selection feedback\"}),20,10);"
        ]
      }
    },
    {
      "name": "VertexSelectionFeedbackPolicy",
      "namespace": "draw2d.policy.figure",
      "description": "<p>Called by the framework if the user edit the position of a figure with a drag drop operation.\nSub class like SelectionEditPolicy or RegionEditPolicy cam adjust th e position of the figure or the selections handles.</p>",
      "extends": [
        "draw2d.policy.figure.SelectionFeedbackPolicy"
      ],
      "access": "",
      "virtual": false,
      "functions": [
        {
          "name": "init",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Creates a new Router object</p>",
          "parameters": [],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "onSelect",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>The host canvas</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "connection",
              "type": "draw2d.Connection",
              "description": "<p>the selected figure</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "isPrimarySelection",
              "type": "Boolean",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "moved",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Callback method if the figure has been moved.</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>The host canvas</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>The related figure</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": false,
          "since": "",
          "examples": []
        },
        {
          "name": "onUnselect",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>the unselected figure</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onInstall",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the host if the policy has been installed.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onUninstall",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the host if the policy has been uninstalled.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onDragStart",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the framework if the related shape has init a drag&amp;drop\noperation</p>\n<p>The Policy can send a veto to prevent the DragDrop operation</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>The host canvas</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>The related figure</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse up event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse up event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": [],
          "returns": {
            "type": "Boolean",
            "description": "<p>return <b>false</b> to send a veto to the drag operation</p>"
          }
        },
        {
          "name": "onDrag",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the framework during drag a figure.</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>The host canvas</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>The related figure</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onDragEnd",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the framework if the drag drop operation ends.</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>The host canvas</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>The related figure</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse up event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse up event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "adjustPosition",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Adjust the coordinates to the rectangle/region of this constraint.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": [
                "Number",
                "draw2d.geo.Point"
              ],
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "",
              "default": "",
              "optional": true,
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": [],
          "returns": {
            "type": "draw2d.geo.Point",
            "description": "<p>the constraint position of the figure</p>"
          }
        },
        {
          "name": "adjustDimension",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>ensure that the dimension didn't goes outside the given restrictions</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "w",
              "type": "Number",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "h",
              "type": "number",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": [],
          "returns": {
            "type": "draw2d.geo.Rectangle",
            "description": "<p>the constraint position of the figure</p>"
          }
        },
        {
          "name": "onRightMouseDown",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the user press the right mouse on the figure.<br>\nYou can either override the &quot;onContextMenu&quot; method of the figure or install an editor policy and override this method.\nBooth is valid and possible.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": [
                "draw2d.Figure",
                "draw2d.shape.basic.Line"
              ],
              "description": "<p>the figure below the mouse</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "4.4.0",
          "examples": []
        },
        {
          "name": "attr",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Read or set object attributes.<br>\nWhen no value is given, reads specified attribute from the element.<br>\nWhen value is given, sets the attribute to that value.\nMultiple attributes can be set by passing an object with name-value pairs.</p>",
          "parameters": [
            {
              "name": "name",
              "type": "String/Object",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "value",
              "type": "Object",
              "description": "",
              "default": "",
              "optional": true,
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "5.3.2",
          "examples": [],
          "returns": {
            "type": "Object",
            "description": ""
          }
        }
      ],
      "fires": "",
      "constructor": {
        "name": "VertexSelectionFeedbackPolicy",
        "description": "",
        "parameters": [],
        "examples": []
      }
    },
    {
      "name": "WidthSelectionFeedbackPolicy",
      "namespace": "draw2d.policy.figure",
      "description": "<p>This selection shows only selection handles for the width. It is only possible to change the width\nof an shaped. The height stays always the same or is recalculated by the figure itself.</p>",
      "extends": [
        "draw2d.policy.figure.SelectionFeedbackPolicy"
      ],
      "access": "",
      "virtual": false,
      "functions": [
        {
          "name": "init",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onUnselect",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>the unselected figure</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onInstall",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the host if the policy has been installed.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onUninstall",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the host if the policy has been uninstalled.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onDragStart",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the framework if the related shape has init a drag&amp;drop\noperation</p>\n<p>The Policy can send a veto to prevent the DragDrop operation</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>The host canvas</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>The related figure</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse up event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse up event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": [],
          "returns": {
            "type": "Boolean",
            "description": "<p>return <b>false</b> to send a veto to the drag operation</p>"
          }
        },
        {
          "name": "onDrag",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the framework during drag a figure.</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>The host canvas</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>The related figure</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onDragEnd",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called by the framework if the drag drop operation ends.</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>The host canvas</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>The related figure</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse up event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse up event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "adjustPosition",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Adjust the coordinates to the rectangle/region of this constraint.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": [
                "Number",
                "draw2d.geo.Point"
              ],
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "",
              "default": "",
              "optional": true,
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": [],
          "returns": {
            "type": "draw2d.geo.Point",
            "description": "<p>the constraint position of the figure</p>"
          }
        },
        {
          "name": "adjustDimension",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>ensure that the dimension didn't goes outside the given restrictions</p>",
          "parameters": [
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "w",
              "type": "Number",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "h",
              "type": "number",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": [],
          "returns": {
            "type": "draw2d.geo.Rectangle",
            "description": "<p>the constraint position of the figure</p>"
          }
        },
        {
          "name": "moved",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Callback if the figure has moved</p>",
          "parameters": [
            {
              "name": "canvas",
              "type": "draw2d.Canvas",
              "description": "<p>The host canvas</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "figure",
              "type": "draw2d.Figure",
              "description": "<p>The related figure</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "",
          "examples": []
        },
        {
          "name": "onRightMouseDown",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Called if the user press the right mouse on the figure.<br>\nYou can either override the &quot;onContextMenu&quot; method of the figure or install an editor policy and override this method.\nBooth is valid and possible.</p>",
          "parameters": [
            {
              "name": "figure",
              "type": [
                "draw2d.Figure",
                "draw2d.shape.basic.Line"
              ],
              "description": "<p>the figure below the mouse</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "x",
              "type": "Number",
              "description": "<p>the x-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "y",
              "type": "Number",
              "description": "<p>the y-coordinate of the mouse down event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "shiftKey",
              "type": "Boolean",
              "description": "<p>true if the shift key has been pressed during this event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "ctrlKey",
              "type": "Boolean",
              "description": "<p>true if the ctrl key has been pressed during the event</p>",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "4.4.0",
          "examples": []
        },
        {
          "name": "attr",
          "access": "",
          "virtual": false,
          "deprecated": "",
          "description": "<p>Read or set object attributes.<br>\nWhen no value is given, reads specified attribute from the element.<br>\nWhen value is given, sets the attribute to that value.\nMultiple attributes can be set by passing an object with name-value pairs.</p>",
          "parameters": [
            {
              "name": "name",
              "type": "String/Object",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "value",
              "type": "Object",
              "description": "",
              "default": "",
              "optional": true,
              "nullable": ""
            }
          ],
          "inherited": true,
          "since": "5.3.2",
          "examples": [],
          "returns": {
            "type": "Object",
            "description": ""
          }
        }
      ],
      "fires": "",
      "constructor": {
        "name": "WidthSelectionFeedbackPolicy",
        "description": "",
        "parameters": [],
        "examples": [
          "// add some demo figure to the canvas\n     //\n     let shape =new draw2d.shape.basic.Rectangle({width:50, height:100, x:10, y:30});\n     canvas.add(shape);\n\n     // At this point you can only change the width of the shape\n     //\n     shape.installEditPolicy(new draw2d.policy.figure.WidthSelectionFeedbackPolicy());"
        ]
      }
    }
  ],
  "namespaces": []
}